import Header from "@/components/header";
import Head from "next/head";
import styled from "styled-components";
import { Screen } from ".";
import NewGameForm from "@/components/newGameForm";
import { useState, useContext } from "react";
import { TokenContext } from "../../contexts/tokenContext";
import GameIcon from "@/components/gameIcon";
import ConsoleIcon from "@/components/consoleIcon";
import axios from "axios";
import AlertTwo from "@/components/alertTwo";
import { useRouter } from "next/router";

export default function NewGame(){
  const [games, setGames] = useState([]);
  const [consoles, setConsoles] = useState([])
  const [selectedGame, setSelectedGame] = useState({id:0,name:'',image:'', consoles:[]});
  const [selectedConsole, setSelectedConsole] = useState({id:0,name:''});

  const { token } = useContext(TokenContext);
  const router = useRouter();

  function createGame(event){
    event.preventDefault();
    const URL = process.env.NEXT_PUBLIC_HOST;
    const body = {
      name:selectedGame.name,
      image:selectedGame.image,
      consoleName:selectedConsole.name
    };
    const config = {
      headers: {
        Authorization: `Bearer ${token}`,
    }
    };
    axios.post(`${URL}/games`,body,config)
    .then((res) => {router.push('/')})
    .catch((err) => {
      if(err.message == 'Bad request.'){
        console.log('ERRO: Ã‰ PRECISO ESTAR LOGADO PARA FAZER UM POST')
      }
    });
  }


    return(
        <>
        <Head>
          <title>Gamestore</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="assets/logoIcon.svg" />
        </Head>
          <Header/>
          <Screen>
            <NewGameForm setGames={setGames}/>
            {games.length > 0 && 
            
            <List>
              {games.map((g)=> 
              <GameIcon 
              key={g.id} 
              id={g.id} 
              name={g.name} 
              image={g.background_image}
              consoles={g.platforms}
              selectedGame={selectedGame}
              setSelectedGame={setSelectedGame}
              setConsoles={setConsoles}/>)}
            </List>
            }
                  
            {consoles.length > 0 && 
            
              <List>

                {consoles.map((c) => 
                  <ConsoleIcon 
                  key={c.id} 
                  id={c.platform.id} 
                  name={c.platform.name} 
                  selectedConsole={selectedConsole}
                  setSelectedConsole={setSelectedConsole}/>
                )}
                
              </List>
            }

            {selectedConsole.id != 0 && 
            
              <AddGameButton onClick={createGame}>Adicionar Jogo</AddGameButton>
            }
            
          </Screen>
          
      
        </>
    )
}


const List = styled.div`
  display: flex;
  width: 60%;
  min-width: 375px;
  max-width: 700px;
  height: 110%;

  overflow-x: scroll;
  
`

const AddGameButton = styled.button`
  width: child;
  height: 45px;
  color: #774801;
  font-size: 20px;
  font-weight:500;
  position: relative;
  border: none;
  border-radius: 8px;
  padding:10px;
  background:  linear-gradient(134.59deg, #F3BA27 15.4%, #FFE600 100%);
  transition: all linear 2s;
  margin: 50px;

  &:hover{
    background:  linear-gradient(315.42deg, #F3BA27 16.49%, #FFE600 85%);
  }

  img{
    position: absolute;
    top: 5px;
    right: 5px;
    
  }
`