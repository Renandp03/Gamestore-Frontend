import styled from "styled-components"
import Head from 'next/head'
import { Screen } from ".."
import Header from "@/components/header"
import { useState, useEffect, useContext } from "react"
import { useRouter } from "next/router"
import axios from "axios"
import GamePerfil from "@/components/gamePerfil"
import { TokenContext } from "../../../contexts/tokenContext"
import Link from "next/link"
import { AlertContext } from "../../../contexts/alertContext"
import Alert from "@/components/alert"
import UserGame from "@/components/userGame"

export default function gamePage(){
    const router = useRouter()
    const { id } = router.query;

   const { setAlertDisable, setMessage } = useContext(AlertContext);
    const [ gameInfo, setGameInfo ] = useState();
    const [userGames, setUserGames] = useState([]);
    const [selectedGame, setSelectedGame] = useState();
    const [disabled, setDisabled] = useState(true);
    const {token,userId} = useContext(TokenContext);


    function getGameInfo(){
        if(!id) return undefined;
        const URL = process.env.NEXT_PUBLIC_HOST;
        axios.get(`${URL}/games/${id}`)
        .then((res) => {setGameInfo(res.data);})
        .catch((err) => {console.log(err)})
    }

    function chooseGame(){
        const token = JSON.parse(localStorage.getItem("token"));
        const config = {
            headers:{
                Authorization: `Bearer ${token}`
            }
        }
        const URL = process.env.NEXT_PUBLIC_HOST;

        axios.get(`${URL}/games/byUser/${userId}`,config)
        .then((res) => {setUserGames(res.data); console.log(res.data)})
        .catch((err) => {
            if(err.response.data.name == 'notFound'){
                setMessage('Você não possui jogos para oferecer');
                setAlertDisable(false);
            }
            else{console.log(err);}
        })
    }

    function startExchange(){
        if(!id) return undefined;
        const config = {
            headers:{
                Authorization: `Bearer ${token}`
            }
        }
        const body = {desiredGameId:Number(id),offeredGameId:selectedGame}
        const URL = process.env.NEXT_PUBLIC_HOST;
        axios.post(`${URL}/exchange`,body,config)
        .then(() => {
            setMessage(`Solicitação feita com sucesso. Aguarde a resposta de ${gameInfo.owner.name}`);
            setAlertDisable(false);
            router.push('/')
        })
        .catch((err) => {console.log(err)});
    }

    useEffect(() => {getGameInfo()},[id])

    if(!gameInfo) return(
    <>
        <Head>
            <title>Gamestore</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="../../assets/logoIcon.svg" />
            </Head>
            <Header/>
            <Screen><img svg="../../asets/loading.svg" alt='loading'/></Screen>
    </>);

    const {name, image, owner, platform} = gameInfo;

    return(
        <>
        <Head>
        <title>{name}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="../../assets/logoIcon.svg" />
        </Head>
        <main>
            <Alert/>
            <Header/>
            <Screen>
                <GameSpace>
                    <GamePerfil name={name} image={image} platform={platform.name}/>
                    <GameInfo>
                        <p>Nome: <span>{name}</span></p>
                        <p>Console: <span>{platform.name}</span></p>
                        <p>Proprietario: <span>{owner.name}</span></p>
                       {owner.id !== userId &&  userId != 0 &&
                       <>
                       
                            <button onClick={chooseGame}>
                                Oferecer troca 
                                <img src="../../assets/right_arrow_icon.svg" />
                            </button>
                        
                       
                        <button className="WhatsAppButtom">
                            Contatar
                            <img src="../../assets/wpp_icon.svg" />
                        </button>
                   
                    </>}
                    </GameInfo>
                </GameSpace>
                {userGames.length > 0 && 
                    <ChooseGameSpace>
                        <h2>Escolha o jogo que deseja oferecer:</h2>
                        <div>
                        {userGames.map((g)=> 
                            <UserGame 
                            key={g.id}
                            id={g.id}
                            name={g.name}
                            image={g.image}
                            selectedGame={selectedGame}
                            setSelectedGame={setSelectedGame}
                            setDisabled={setDisabled}
                            />)}
                        </div>
                        {
                        selectedGame ? 
                        <button onClick={startExchange}>ofertar</button> :
                        <></>
                        }
                    </ChooseGameSpace>
                }
                
               
            </Screen>
        </main>
       </>
    )
}

const GameSpace = styled.div`
    display: flex;
    padding: 30px 0px;
    align-items: flex-start;

    @media(max-width: 650px){
        flex-direction: column;
    }
`

const GameInfo = styled.div`
    color: white;
    padding: 10px 20px;

    p{
        font-size: 18px;
        font-weight: 500;
        margin-bottom: 15px;
    }
    span{
        font-size: 16px;
        font-weight: 400;
    }
    button{
        min-width: 100px;
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        justify-content:center;
        text-align: center;
        font-size: 18px;
        color: #774801;
        background: #FFBB12;
        padding: 5px;
        border:none;
        border-radius: 8px;
        margin: 8px 0px;
        img{
            width:20px;
            margin-left: 5px;
        }
    }
    a{text-decoration:none;}

    .WhatsAppButtom{
        font-weight: 500;
        color: #075E54;
        background: #25D366;
    }
`

const ChooseGameSpace = styled.div`
    display: flex;
    flex-direction: column;
    align-items:center;
    h2{
        font-size: 20px;
        color: white;
    }

    div{
        display:flex;
        width: 99%;
        overflow-x: scroll;
        margin-bottom: 50px;
    }
    button{
        width: auto;
        height: auto;
        padding: 5px 20px;
        background: #FFBB12;
        border: none;
        border-radius: 3px;
        color: #774801;
        font-size: 20px;
        font-weight: 500;
        transition: all linear .2s;
    }
`