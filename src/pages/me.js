import styled from "styled-components";
import { Screen } from ".";
import Header from '@/components/header'
import { useState, useEffect } from "react";
import { useRouter } from "next/router";
import axios from "axios";
import Head from 'next/head'
import Link from "next/link";
import UserGame from "@/components/userGame";


export default function UserPage(){

    const router = useRouter();
    const [userInfo, setUserInfo] = useState({});
    const [selectedGame, setSelectedGame] = useState();
    const [disabled, setDisabled] = useState(true);

    async function getUser(userId,token){
        const config = {
            headers:{
                Authorization: `Bearer ${token}`
            }
        }
       
        const URL = process.env.NEXT_PUBLIC_HOST;
        await axios.get(`${URL}/users/${userId}`,config)
        .then((res) => {
            setUserInfo(res.data);
        })
        .catch((err) => console.log(err.response.data));
    }

    useEffect(() => {
        const userId = JSON.parse(localStorage.getItem("userId"));
        const token = JSON.parse(localStorage.getItem("token"));
        getUser(userId,token);
    }, [])

    const { name, phone, image } = userInfo;
    const games = userInfo.games || [];
    const city = userInfo.address?.city.name;


    return(
        <>
            <Head>
                <title>Gamestore</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="../../assets/logoIcon.svg" />
            </Head>
            <Header/>
            <Screen>
               
                    <UserPerfil>
                        <div className="perfil">
                            <h1>{userInfo.name}</h1>
                            <img src={userInfo.image}/>
                        </div>
                        <div className="contacts">
                            <h2>Email:</h2>
                            <p>{userInfo.email}</p>
                            <h2>Celular:</h2>
                            <p>{phone}</p>
                            <h2>Cidade:</h2>
                            <p>{city}</p>
                        </div>
                    </UserPerfil>
                    <GamesSpace>
                        {
                            games.length > 0 ?
                            <>
                                <h1>Jogos disponíveis</h1>
                                {games.map((g) =>
                                    <Link href={`/game/${g.id}`}>
                                    <UserGame 
                                        key={g.id}
                                        id={g.id}
                                        name={g.name}
                                        image={g.image}
                                        selectedGame={selectedGame}
                                        setSelectedGame={setSelectedGame}
                                        setDisabled={setDisabled}
                                        />
                                        </Link>
                                )}
                            </> :
                            <h1>Você não possui jogos ainda.</h1>
                        }
                        <button onClick={() => router.push('/createGame')}>adicionar jogo</button>
                    </GamesSpace>
            </Screen>
        </>
    )
};

const UserPerfil = styled.div`
    width: 300px;
    height: 400px;
    border-radius:8px;
    background: #fff;
    margin: 30px 0px;
    padding: 15px;
    box-sizing: border-box;
    position: fixed;
    top: 100px;
    left: 10%;

    .perfil{
        
        height: 100px;
        display: flex;
        justify-content: space-between;
        align-items: center;

        img{
        
            width: 100px;
            height: 100px;
            border: 5px solid yellow;
            border-radius:100px;
            object-fit:cover;
            margin: 5px;
        }

        h1{
            font-size: 38px;
            color: #444;
            font-weight: 700;
            flex-wrap:wrap;
            max-width: 200px;
        }
    }

    .contacts{
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        h2{
            font-size: 18px;
            color: #555;
            font-weight: 500;
            flex-wrap:wrap;
            max-width: 50px;
            margin-bottom: 2px;
        }
        p{
            font-size: 14px;
            color: #777;
            font-weight: 400;
            flex-wrap:wrap;
            max-width: 150px;
            margin-bottom: 10px;
        }
    }
    
`
const Columns = styled.div`
    display: flex;
`

const GamesSpace = styled.div`
    display: flex;
    flex-wrap: wrap;
    margin: 30px 0px 100px 500px;

    width: 500px;
    height: auto;
    min-height: 400px;

    align-items: center;
    justify-content: center;
    position: relative;
    padding: 60px 0px;
    box-sizing: border-box;
    
    h1{
        font-size: 30px;
        color: white;
        position: absolute;
        top: 0px;
        left: center;

    }

    h2{
        font-size: 30px;
        color: white;
        text-align: center;

    }

    button{
        position: absolute;
        bottom:15px;
        left: center;

        width: 180px;
        height: 50px;
        background: #FFBB12;
        border: none;
        border-radius: 3px;
        color: #774801;
        font-size: 20px;
        font-weight: 500;
        transition: all linear .2s;

        &:hover{
            background: #FFB806;
            font-size: 21px;

        }
    }
    

`